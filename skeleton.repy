def board(ip, port, sockobj, thiscommhandle, listencommhandle):
    msgheader = sockobj.recv(1024) # Receive message,
    # React depending on message type: HTTP GET or POST, or some other type of communication.
    if msgheader.startswith( 'GET' ):
        htmlresponse = """<!DOCTYPE html> <html> <head> <meta content="text/html; charset=utf-8" http-equiv="content-type"> <title>Blackboard GroupName</title> </head> <body> <h2> Board Content</h2> <p>Board board board board</p> <br> <h3>Submit to board<h3> <textarea rows="4" cols="50" name="comment" form="usrform"></textarea> <form action="" id="usrform" method="post"> <input type="submit"> </form> </body> </html>"""
        sockobj.send("HTTP/1.1 200 OK\r\nContent-type: text/html\r\n" + \
        "Content-length: %i\r\n\r\n%s" % (len(htmlresponse), htmlresponse))
        stopcomm(thiscommhandle)
    elif msgheader.startswith( 'POST' ):
        print "Recieved POST: "
        import re
        match = re.match("comment=.", msgheader)
        if match:
        print match.group(0)
    else:
        print "Recieved something else: "

if callfunc == 'initialize':
    if len(callargs) > 1:
        raise Exception("Too many call arguments")

    # Running remotely (assuming that we pass input argument only remotely):
    # whenever this vessel gets a connection on its IPaddress:Clearinghouseport it'll call function board
    elif len(callargs) == 1:
            port = int(callargs[0])
        ip = getmyip()

  # Running locally:
  # whenever we get a connection on 127.0.0.1:12345 we'll call board
    else:
        port = 12345
        ip = '127.0.0.1'
  listencommhandle = waitforconn(ip,port,board)
